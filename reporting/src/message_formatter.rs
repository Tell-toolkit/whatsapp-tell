//! WhatsApp message formatting

use shared::types::MarkerSet;
use shared::errors::Result;
use tracing::info;

/// Formats messages for WhatsApp delivery
pub struct MessageFormatter {
    // TODO: Add formatting configuration
}

impl MessageFormatter {
    pub fn new() -> Self {
        Self {}
    }

    /// Formats a brief report for WhatsApp
    pub fn format_brief_report(&self, markers: &MarkerSet) -> Result<String> {
        info!("Formatting brief report for WhatsApp");
        
        // TODO: Implement WhatsApp-specific formatting
        // - Use appropriate emojis
        // - Keep within WhatsApp message limits
        // - Include clear disclaimers
        // - Add call-to-action buttons if needed
        
        Ok(format!(
            "üìä *An√°lisis Completado*\n\n\
            üó£Ô∏è Velocidad: {:.1} s√≠labas/seg\n\
            ‚è±Ô∏è Fonaci√≥n: {:.0}%\n\
            ‚è∏Ô∏è Pausas: {:.1}s promedio\n\
            ‚úÖ Confianza: {:.0}%\n\n\
            _An√°lisis informativo √∫nicamente._\n\
            _No constituye diagn√≥stico m√©dico._",
            markers.speech_rate.unwrap_or(0.0),
            markers.phonation_time.unwrap_or(0.0) * 100.0,
            markers.average_pause_length.unwrap_or(0.0),
            markers.confidence_score * 100.0
        ))
    }

    /// Formats consent request message
    pub fn format_consent_request(&self) -> Result<String> {
        info!("Formatting consent request message");
        
        Ok(
            "üîí *Consentimiento para An√°lisis de Voz*\n\n\
            Para analizar tu voz y proporcionar informaci√≥n sobre marcadores neurocognitivos, necesitamos tu consentimiento expl√≠cito.\n\n\
            üìã *¬øQu√© procesamos?*\n\
            ‚Ä¢ Audio de voz para an√°lisis t√©cnico\n\
            ‚Ä¢ Marcadores de velocidad, prosodia y fluidez\n\
            ‚Ä¢ Retenci√≥n por 30 d√≠as (configurable)\n\n\
            ‚úÖ *Opciones de consentimiento:*\n\
            ‚Ä¢ An√°lisis b√°sico de voz\n\
            ‚Ä¢ An√°lisis con transcripci√≥n (opcional)\n\
            ‚Ä¢ Modo investigaci√≥n (opcional)\n\n\
            Responde *S√ç* para continuar o *NO* para cancelar.".to_string()
        )
    }

    /// Formats error message
    pub fn format_error_message(&self, error: &str) -> Result<String> {
        Ok(format!(
            "‚ùå *Error en el Procesamiento*\n\n\
            Lo sentimos, hubo un problema al procesar tu audio.\n\n\
            Error: {}\n\n\
            Por favor, intenta enviar otro mensaje de voz o contacta soporte si el problema persiste.",
            error
        ))
    }
}
